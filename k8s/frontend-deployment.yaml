apiVersion: apps/v1
kind: Deployment
metadata:
  name: hypersearch-frontend
  namespace: hypersearch
  labels:
    app: hypersearch-server
    component: frontend
    tier: presentation
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: hypersearch-server
      component: frontend
  template:
    metadata:
      labels:
        app: hypersearch-server
        component: frontend
        tier: presentation
    spec:
      containers:
      - name: frontend
        image: szarastrefa/hypersearch-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        envFrom:
        - configMapRef:
            name: hypersearch-config
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        # Optimized Node.js settings
        env:
        - name: NODE_ENV
          value: "production"
        - name: NODE_OPTIONS
          value: "--max-old-space-size=768"
---
apiVersion: v1
kind: Service
metadata:
  name: hypersearch-frontend
  namespace: hypersearch
  labels:
    app: hypersearch-server
    component: frontend
spec:
  selector:
    app: hypersearch-server
    component: frontend
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP